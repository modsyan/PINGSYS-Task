{
  "version": 3,
  "sources": ["../../../../../Modules/EmployeeManagement/Employees/EmployeesPage.ts", "../../../../../Modules/ServerTypes/EmployeeManagement/EmployeesColumns.ts", "../../../../../Modules/ServerTypes/Modules/EmployeeManagement.Employees.EmployeeGender.ts", "../../../../../Modules/ServerTypes/EmployeeManagement/EmployeesForm.ts", "../../../../../Modules/ServerTypes/EmployeeManagement/EmployeesRow.ts", "../../../../../Modules/ServerTypes/EmployeeManagement/EmployeesService.ts", "../../../../../Modules/EmployeeManagement/Employees/EmployeesGrid.ts", "../../../../../Modules/EmployeeManagement/Employees/EmployeesDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\nimport { EmployeesGrid } from './EmployeesGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new EmployeesGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { EmployeeGender } from \"../Modules/EmployeeManagement.Employees.EmployeeGender\";\nimport { EmployeesRow } from \"./EmployeesRow\";\n\nexport interface EmployeesColumns {\n    EmployeeId: Column<EmployeesRow>;\n    FirstName: Column<EmployeesRow>;\n    LastName: Column<EmployeesRow>;\n    CertificatesCount: Column<EmployeesRow>;\n    Gender: Column<EmployeesRow>;\n    BirthDate: Column<EmployeesRow>;\n}\n\nexport class EmployeesColumns extends ColumnsBase<EmployeesRow> {\n    static readonly columnsKey = 'EmployeeManagement.Employees';\n    static readonly Fields = fieldsProxy<EmployeesColumns>();\n}\n\n[EmployeeGender]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum EmployeeGender {\n    Male = 1,\n    Female = 2\n}\nDecorators.registerEnumType(EmployeeGender, 'MySereneApp.Modules.EmployeeManagement.Employees.EmployeeGender');", "\uFEFFimport { StringEditor, EnumEditor, MultipleImageUploadEditor, DateEditor, BooleanEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { EmployeeGender } from \"../Modules/EmployeeManagement.Employees.EmployeeGender\";\n\nexport interface EmployeesForm {\n    FirstName: StringEditor;\n    LastName: StringEditor;\n    Gender: EnumEditor;\n    Certificates: MultipleImageUploadEditor;\n    BirthDate: DateEditor;\n    IsActive: BooleanEditor;\n}\n\nexport class EmployeesForm extends PrefixedContext {\n    static readonly formKey = 'EmployeeManagement.Employees';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeesForm.init)  {\n            EmployeesForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = EnumEditor;\n            var w2 = MultipleImageUploadEditor;\n            var w3 = DateEditor;\n            var w4 = BooleanEditor;\n\n            initFormType(EmployeesForm, [\n                'FirstName', w0,\n                'LastName', w0,\n                'Gender', w1,\n                'Certificates', w2,\n                'BirthDate', w3,\n                'IsActive', w4\n            ]);\n        }\n    }\n}\n\n[EmployeeGender]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface EmployeesRow {\n    EmployeeId?: number;\n    FirstName?: string;\n    LastName?: string;\n    Gender?: number;\n    BirthDate?: string;\n    IsActive?: number;\n    Certificates?: string;\n    CertificatesCount?: number;\n}\n\nexport abstract class EmployeesRow {\n    static readonly idProperty = 'EmployeeId';\n    static readonly nameProperty = 'FirstName';\n    static readonly localTextPrefix = 'EmployeeManagement.Employees';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<EmployeesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { EmployeesRow } from \"./EmployeesRow\";\n\nexport namespace EmployeesService {\n    export const baseUrl = 'EmployeeManagement/Employees';\n\n    export declare function Create(request: SaveRequest<EmployeesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeManagement/Employees/Create\",\n        Update: \"EmployeeManagement/Employees/Update\",\n        Delete: \"EmployeeManagement/Employees/Delete\",\n        Retrieve: \"EmployeeManagement/Employees/Retrieve\",\n        List: \"EmployeeManagement/Employees/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { EmployeesColumns, EmployeesRow, EmployeesService } from '@/ServerTypes/EmployeeManagement';\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\nimport { EmployeesDialog } from './EmployeesDialog';\n\n@Decorators.registerClass('MySereneApp.EmployeeManagement.EmployeesGrid')\nexport class EmployeesGrid extends EntityGrid<EmployeesRow, any> {\n    protected getColumnsKey() { return EmployeesColumns.columnsKey; }\n    protected getDialogType() { return EmployeesDialog; }\n    protected getRowDefinition() { return EmployeesRow; }\n    protected getService() { return EmployeesService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { EmployeesForm, EmployeesRow, EmployeesService } from '@/ServerTypes/EmployeeManagement';\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\n\n@Decorators.registerClass('MySereneApp.EmployeeManagement.EmployeesDialog')\nexport class EmployeesDialog extends EntityDialog<EmployeesRow, any> {\n    protected getFormKey() { return EmployeesForm.formKey; }\n    protected getRowDefinition() { return EmployeesRow; }\n    protected getService() { return EmployeesService.baseUrl; }\n\n    protected form = new EmployeesForm(this.idPrefix);\n}"],
  "mappings": "uEAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SCAzC,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,KAAO,GAAP,OACAA,IAAA,OAAS,GAAT,SAFQA,OAAA,IAIZ,aAAW,iBAAiBA,EAAgB,iEAAiE,EDQtG,IAAMC,EAAN,MAAMA,UAAyB,aAA0B,CAGhE,EAHgEC,EAAAD,EAAA,oBAAnDA,EACO,WAAa,+BADpBA,EAEO,UAAS,eAA8B,EAFpD,IAAME,EAANF,EEdN,IAAAG,EAA8H,SAYxH,IAAMC,EAAN,MAAMA,UAAsB,iBAAgB,CAI/C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAc,KAAO,CACtBA,EAAc,KAAO,GAErB,IAAIE,EAAK,eACLC,EAAK,aACLC,EAAK,4BACLC,EAAK,aACLC,EAAK,mBAET,gBAAaN,EAAe,CACxB,YAAaE,EACb,WAAYA,EACZ,SAAUC,EACV,eAAgBC,EAChB,YAAaC,EACb,WAAYC,CAChB,CAAC,CACL,CACJ,CACJ,EA1BmDC,EAAAP,EAAA,iBAAtCA,EACO,QAAU,+BADvB,IAAMQ,EAANR,ECZN,IAAAS,EAA4B,SAatB,IAAeC,EAAf,MAAeA,CAAa,CAUnC,EAVmCC,EAAAD,EAAA,gBAAbA,EACF,WAAa,aADXA,EAEF,aAAe,YAFbA,EAGF,gBAAkB,+BAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA0B,EAThD,IAAeE,EAAfF,ECbN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,+BAQVA,EAAA,QAAU,CACnB,OAAQ,sCACR,OAAQ,sCACR,OAAQ,sCACR,SAAU,wCACV,KAAM,mCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAkBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC5C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAA8B,cAAgC,CAA9D,kCAKH,KAAU,KAAO,IAAIC,EAAc,KAAK,QAAQ,EAJtC,YAAa,CAAE,OAAOA,EAAc,OAAS,CAC7C,kBAAmB,CAAE,OAAOC,CAAc,CAC1C,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAG9D,EANqEC,EAAAJ,EAAA,mBAAxDA,EAANK,EAAA,CADN,aAAW,cAAc,gDAAgD,GAC7DL,GDCN,IAAMM,EAAN,cAA4B,YAA8B,CACnD,eAAgB,CAAE,OAAOC,EAAiB,UAAY,CACtD,eAAgB,CAAE,OAAOC,CAAiB,CAC1C,kBAAmB,CAAE,OAAOC,CAAc,CAC1C,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAE1D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATiEC,EAAAN,EAAA,iBAApDA,EAANO,EAAA,CADN,aAAW,cAAc,8CAA8C,GAC3DP,GNFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAc,EAAE,UAAU,CAAC,EAAE,OAAO,CACnE,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "import_corelib", "EmployeeGender", "_EmployeesColumns", "__name", "EmployeesColumns", "import_corelib", "_EmployeesForm", "prefix", "w0", "w1", "w2", "w3", "w4", "__name", "EmployeesForm", "import_corelib", "_EmployeesRow", "__name", "EmployeesRow", "import_corelib", "EmployeesService", "x", "r", "s", "o", "import_corelib", "import_corelib", "EmployeesDialog", "EmployeesForm", "EmployeesRow", "EmployeesService", "__name", "__decorateClass", "EmployeesGrid", "EmployeesColumns", "EmployeesDialog", "EmployeesRow", "EmployeesService", "container", "__name", "__decorateClass", "pageInit", "EmployeesGrid", "__name"]
}
